Terminals unused in grammar

    tINPUT
    tSIZEOF
    tPRIVATE
    l


State 61 conflicts: 1 shift/reduce


Grammar

    0 $accept: file $end

    1 file: program
    2     | declarations
    3     | declarations program

    4 declarations: declaration ';'
    5             | declaration
    6             | declarations declaration ';'

    7 declaration: type tIDENTIFIER '=' expr
    8            | type tIDENTIFIER
    9            | tVAR tIDENTIFIER '=' expr
   10            | tUSE type tIDENTIFIER
   11            | tFOREIGN type tIDENTIFIER
   12            | tPUBLIC tIDENTIFIER
   13            | tPUBLIC tIDENTIFIER '=' expr
   14            | tPUBLIC type tIDENTIFIER
   15            | tPUBLIC type tIDENTIFIER '=' expr

   16 program: tBEGIN block tEND

   17 return_type: type
   18            | tVOID

   19 type: tINT_TYPE
   20     | tDOUBLE_TYPE
   21     | tSTRING_TYPE
   22     | '[' type ']'
   23     | func-type

   24 func-type: return_type '<' types '>'
   25          | return_type '<' '>'

   26 types: type
   27      | types type

   28 block: '{' declarations instructions '}'
   29      | '{' declarations '}'
   30      | '{' instructions '}'
   31      | '{' '}'

   32 instructions: instruction
   33             | blktions
   34             | instructions ';' instruction
   35             | blktions instruction

   36 blktions: blktion
   37         | instructions ';' blktion
   38         | blktions blktion

   39 blktion: tIF ifcontent
   40        | block
   41        | tWHILE '(' expr ')' tDO block

   42 instruction: expr
   43            | tWRITE exprs
   44            | tWRITELN exprs
   45            | tAGAIN
   46            | tSTOP
   47            | tRETURN expr
   48            | tRETURN

   49 exprs: expr
   50      | exprs ',' expr

   51 ifcontent: '(' expr ')' tTHEN block
   52          | '(' expr ')' tTHEN block tELIF ifcontent
   53          | '(' expr ')' tTHEN block tELSE block

   54 arguments: declaration
   55          | arguments declaration

   56 string: tSTRING
   57       | string tSTRING

   58 expr: tINTEGER
   59     | string
   60     | tDOUBLE
   61     | tNULL
   62     | '-' expr
   63     | '+' expr
   64     | expr '+' expr
   65     | expr '-' expr
   66     | expr '*' expr
   67     | expr '/' expr
   68     | expr '%' expr
   69     | expr '<' expr
   70     | expr '>' expr
   71     | expr tGE expr
   72     | expr tLE expr
   73     | expr tNE expr
   74     | expr tEQ expr
   75     | tNOT expr
   76     | expr tAND expr
   77     | expr tOR expr
   78     | '(' expr ')'
   79     | '[' expr ']'
   80     | lval
   81     | lval '=' expr
   82     | lval '?'
   83     | '(' ')' tARROW return_type ':' block
   84     | '(' arguments ')' tARROW return_type ':' block
   85     | expr '(' arguments ')'
   86     | expr '(' ')'

   87 lval: tIDENTIFIER
   88     | expr '[' expr ']'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 68
    '(' (40) 41 51 52 53 78 83 84 85 86
    ')' (41) 41 51 52 53 78 83 84 85 86
    '*' (42) 66
    '+' (43) 63 64
    ',' (44) 50
    '-' (45) 62 65
    '/' (47) 67
    ':' (58) 83 84
    ';' (59) 4 6 34 37
    '<' (60) 24 25 69
    '=' (61) 7 9 13 15 81
    '>' (62) 24 25 70
    '?' (63) 82
    '[' (91) 22 79 88
    ']' (93) 22 79 88
    '{' (123) 28 29 30 31
    '}' (125) 28 29 30 31
    error (256)
    tIDENTIFIER <s> (258) 7 8 9 10 11 12 13 14 15 87
    tSTRING <s> (259) 56 57
    tDOUBLE <d> (260) 60
    tINTEGER <i> (261) 58
    tAGAIN (262) 45
    tSTOP (263) 46
    tRETURN (264) 47 48
    tDOUBLE_TYPE (265) 20
    tSTRING_TYPE (266) 21
    tINT_TYPE (267) 19
    tVOID (268) 18
    tVAR (269) 9
    tPUBLIC (270) 12 13 14 15
    tUSE (271) 10
    tFOREIGN (272) 11
    tARROW (273) 83 84
    tWHILE (274) 41
    tBEGIN (275) 16
    tEND (276) 16
    tDO (277) 41
    tIF (278) 39
    tWRITE (279) 43
    tWRITELN (280) 44
    tINPUT (281)
    tNULL (282) 61
    tSIZEOF (283)
    tPRIVATE (284)
    tIFX (285)
    tELIF (286) 52
    tTHEN (287) 51 52 53
    tELSE (288) 53
    tOR (289) 77
    tAND (290) 76
    tNOT (291) 75
    tEQ (292) 74
    tNE (293) 73
    tGE (294) 71
    tLE (295) 72
    l (296)
    tUNARY (297)


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    file <sequence> (62)
        on left: 1 2 3
        on right: 0
    declarations <sequence> (63)
        on left: 4 5 6
        on right: 2 3 6 28 29
    declaration <node> (64)
        on left: 7 8 9 10 11 12 13 14 15
        on right: 4 5 6 54 55
    program <node> (65)
        on left: 16
        on right: 1 3
    return_type <type> (66)
        on left: 17 18
        on right: 24 25 83 84
    type <type> (67)
        on left: 19 20 21 22 23
        on right: 7 8 10 11 14 15 17 22 26 27
    func-type <type> (68)
        on left: 24 25
        on right: 23
    types <types> (69)
        on left: 26 27
        on right: 24 27
    block <block> (70)
        on left: 28 29 30 31
        on right: 16 40 41 51 52 53 83 84
    instructions <sequence> (71)
        on left: 32 33 34 35
        on right: 28 30 34 37
    blktions <sequence> (72)
        on left: 36 37 38
        on right: 33 35 38
    blktion <node> (73)
        on left: 39 40 41
        on right: 36 37 38
    instruction <node> (74)
        on left: 42 43 44 45 46 47 48
        on right: 32 34 35
    exprs <sequence> (75)
        on left: 49 50
        on right: 43 44 50
    ifcontent <node> (76)
        on left: 51 52 53
        on right: 39 52
    arguments <sequence> (77)
        on left: 54 55
        on right: 55 84 85
    string <s> (78)
        on left: 56 57
        on right: 57 59
    expr <expression> (79)
        on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
        on right: 7 9 13 15 41 42 47 49 50 51 52 53 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 81 85 86 88
    lval <lvalue> (80)
        on left: 87 88
        on right: 80 81 82


State 0

    0 $accept: . file $end

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    tVAR          shift, and go to state 5
    tPUBLIC       shift, and go to state 6
    tUSE          shift, and go to state 7
    tFOREIGN      shift, and go to state 8
    tBEGIN        shift, and go to state 9
    '['           shift, and go to state 10

    file          go to state 11
    declarations  go to state 12
    declaration   go to state 13
    program       go to state 14
    return_type   go to state 15
    type          go to state 16
    func-type     go to state 17


State 1

   20 type: tDOUBLE_TYPE .

    $default  reduce using rule 20 (type)


State 2

   21 type: tSTRING_TYPE .

    $default  reduce using rule 21 (type)


State 3

   19 type: tINT_TYPE .

    $default  reduce using rule 19 (type)


State 4

   18 return_type: tVOID .

    $default  reduce using rule 18 (return_type)


State 5

    9 declaration: tVAR . tIDENTIFIER '=' expr

    tIDENTIFIER  shift, and go to state 18


State 6

   12 declaration: tPUBLIC . tIDENTIFIER
   13            | tPUBLIC . tIDENTIFIER '=' expr
   14            | tPUBLIC . type tIDENTIFIER
   15            | tPUBLIC . type tIDENTIFIER '=' expr

    tIDENTIFIER   shift, and go to state 19
    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    '['           shift, and go to state 10

    return_type  go to state 15
    type         go to state 20
    func-type    go to state 17


State 7

   10 declaration: tUSE . type tIDENTIFIER

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    '['           shift, and go to state 10

    return_type  go to state 15
    type         go to state 21
    func-type    go to state 17


State 8

   11 declaration: tFOREIGN . type tIDENTIFIER

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    '['           shift, and go to state 10

    return_type  go to state 15
    type         go to state 22
    func-type    go to state 17


State 9

   16 program: tBEGIN . block tEND

    '{'  shift, and go to state 23

    block  go to state 24


State 10

   22 type: '[' . type ']'

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    '['           shift, and go to state 10

    return_type  go to state 15
    type         go to state 25
    func-type    go to state 17


State 11

    0 $accept: file . $end

    $end  shift, and go to state 26


State 12

    2 file: declarations .
    3     | declarations . program
    6 declarations: declarations . declaration ';'

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    tVAR          shift, and go to state 5
    tPUBLIC       shift, and go to state 6
    tUSE          shift, and go to state 7
    tFOREIGN      shift, and go to state 8
    tBEGIN        shift, and go to state 9
    '['           shift, and go to state 10

    $default  reduce using rule 2 (file)

    declaration  go to state 27
    program      go to state 28
    return_type  go to state 15
    type         go to state 16
    func-type    go to state 17


State 13

    4 declarations: declaration . ';'
    5             | declaration .

    ';'  shift, and go to state 29

    $default  reduce using rule 5 (declarations)


State 14

    1 file: program .

    $default  reduce using rule 1 (file)


State 15

   24 func-type: return_type . '<' types '>'
   25          | return_type . '<' '>'

    '<'  shift, and go to state 30


State 16

    7 declaration: type . tIDENTIFIER '=' expr
    8            | type . tIDENTIFIER
   17 return_type: type .

    tIDENTIFIER  shift, and go to state 31

    $default  reduce using rule 17 (return_type)


State 17

   23 type: func-type .

    $default  reduce using rule 23 (type)


State 18

    9 declaration: tVAR tIDENTIFIER . '=' expr

    '='  shift, and go to state 32


State 19

   12 declaration: tPUBLIC tIDENTIFIER .
   13            | tPUBLIC tIDENTIFIER . '=' expr

    '='  shift, and go to state 33

    $default  reduce using rule 12 (declaration)


State 20

   14 declaration: tPUBLIC type . tIDENTIFIER
   15            | tPUBLIC type . tIDENTIFIER '=' expr
   17 return_type: type .

    tIDENTIFIER  shift, and go to state 34

    $default  reduce using rule 17 (return_type)


State 21

   10 declaration: tUSE type . tIDENTIFIER
   17 return_type: type .

    tIDENTIFIER  shift, and go to state 35

    $default  reduce using rule 17 (return_type)


State 22

   11 declaration: tFOREIGN type . tIDENTIFIER
   17 return_type: type .

    tIDENTIFIER  shift, and go to state 36

    $default  reduce using rule 17 (return_type)


State 23

   28 block: '{' . declarations instructions '}'
   29      | '{' . declarations '}'
   30      | '{' . instructions '}'
   31      | '{' . '}'

    tIDENTIFIER   shift, and go to state 37
    tSTRING       shift, and go to state 38
    tDOUBLE       shift, and go to state 39
    tINTEGER      shift, and go to state 40
    tAGAIN        shift, and go to state 41
    tSTOP         shift, and go to state 42
    tRETURN       shift, and go to state 43
    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    tVAR          shift, and go to state 5
    tPUBLIC       shift, and go to state 6
    tUSE          shift, and go to state 7
    tFOREIGN      shift, and go to state 8
    tWHILE        shift, and go to state 44
    tIF           shift, and go to state 45
    tWRITE        shift, and go to state 46
    tWRITELN      shift, and go to state 47
    tNULL         shift, and go to state 48
    tNOT          shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '('           shift, and go to state 52
    '['           shift, and go to state 53
    '{'           shift, and go to state 23
    '}'           shift, and go to state 54

    declarations  go to state 55
    declaration   go to state 13
    return_type   go to state 15
    type          go to state 16
    func-type     go to state 17
    block         go to state 56
    instructions  go to state 57
    blktions      go to state 58
    blktion       go to state 59
    instruction   go to state 60
    string        go to state 61
    expr          go to state 62
    lval          go to state 63


State 24

   16 program: tBEGIN block . tEND

    tEND  shift, and go to state 64


State 25

   17 return_type: type .
   22 type: '[' type . ']'

    ']'  shift, and go to state 65

    $default  reduce using rule 17 (return_type)


State 26

    0 $accept: file $end .

    $default  accept


State 27

    6 declarations: declarations declaration . ';'

    ';'  shift, and go to state 66


State 28

    3 file: declarations program .

    $default  reduce using rule 3 (file)


State 29

    4 declarations: declaration ';' .

    $default  reduce using rule 4 (declarations)


State 30

   24 func-type: return_type '<' . types '>'
   25          | return_type '<' . '>'

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    '>'           shift, and go to state 67
    '['           shift, and go to state 10

    return_type  go to state 15
    type         go to state 68
    func-type    go to state 17
    types        go to state 69


State 31

    7 declaration: type tIDENTIFIER . '=' expr
    8            | type tIDENTIFIER .

    '='  shift, and go to state 70

    $default  reduce using rule 8 (declaration)


State 32

    9 declaration: tVAR tIDENTIFIER '=' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 72
    lval    go to state 63


State 33

   13 declaration: tPUBLIC tIDENTIFIER '=' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 73
    lval    go to state 63


State 34

   14 declaration: tPUBLIC type tIDENTIFIER .
   15            | tPUBLIC type tIDENTIFIER . '=' expr

    '='  shift, and go to state 74

    $default  reduce using rule 14 (declaration)


State 35

   10 declaration: tUSE type tIDENTIFIER .

    $default  reduce using rule 10 (declaration)


State 36

   11 declaration: tFOREIGN type tIDENTIFIER .

    $default  reduce using rule 11 (declaration)


State 37

   87 lval: tIDENTIFIER .

    $default  reduce using rule 87 (lval)


State 38

   56 string: tSTRING .

    $default  reduce using rule 56 (string)


State 39

   60 expr: tDOUBLE .

    $default  reduce using rule 60 (expr)


State 40

   58 expr: tINTEGER .

    $default  reduce using rule 58 (expr)


State 41

   45 instruction: tAGAIN .

    $default  reduce using rule 45 (instruction)


State 42

   46 instruction: tSTOP .

    $default  reduce using rule 46 (instruction)


State 43

   47 instruction: tRETURN . expr
   48            | tRETURN .

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    $default  reduce using rule 48 (instruction)

    string  go to state 61
    expr    go to state 75
    lval    go to state 63


State 44

   41 blktion: tWHILE . '(' expr ')' tDO block

    '('  shift, and go to state 76


State 45

   39 blktion: tIF . ifcontent

    '('  shift, and go to state 77

    ifcontent  go to state 78


State 46

   43 instruction: tWRITE . exprs

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    exprs   go to state 79
    string  go to state 61
    expr    go to state 80
    lval    go to state 63


State 47

   44 instruction: tWRITELN . exprs

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    exprs   go to state 81
    string  go to state 61
    expr    go to state 80
    lval    go to state 63


State 48

   61 expr: tNULL .

    $default  reduce using rule 61 (expr)


State 49

   75 expr: tNOT . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 82
    lval    go to state 63


State 50

   63 expr: '+' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 83
    lval    go to state 63


State 51

   62 expr: '-' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 84
    lval    go to state 63


State 52

   78 expr: '(' . expr ')'
   83     | '(' . ')' tARROW return_type ':' block
   84     | '(' . arguments ')' tARROW return_type ':' block

    tIDENTIFIER   shift, and go to state 37
    tSTRING       shift, and go to state 38
    tDOUBLE       shift, and go to state 39
    tINTEGER      shift, and go to state 40
    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    tVAR          shift, and go to state 5
    tPUBLIC       shift, and go to state 6
    tUSE          shift, and go to state 7
    tFOREIGN      shift, and go to state 8
    tNULL         shift, and go to state 48
    tNOT          shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '('           shift, and go to state 52
    '['           shift, and go to state 53
    ')'           shift, and go to state 85

    declaration  go to state 86
    return_type  go to state 15
    type         go to state 16
    func-type    go to state 17
    arguments    go to state 87
    string       go to state 61
    expr         go to state 88
    lval         go to state 63


State 53

   22 type: '[' . type ']'
   79 expr: '[' . expr ']'

    tIDENTIFIER   shift, and go to state 37
    tSTRING       shift, and go to state 38
    tDOUBLE       shift, and go to state 39
    tINTEGER      shift, and go to state 40
    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    tNULL         shift, and go to state 48
    tNOT          shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '('           shift, and go to state 52
    '['           shift, and go to state 53

    return_type  go to state 15
    type         go to state 25
    func-type    go to state 17
    string       go to state 61
    expr         go to state 89
    lval         go to state 63


State 54

   31 block: '{' '}' .

    $default  reduce using rule 31 (block)


State 55

    6 declarations: declarations . declaration ';'
   28 block: '{' declarations . instructions '}'
   29      | '{' declarations . '}'

    tIDENTIFIER   shift, and go to state 37
    tSTRING       shift, and go to state 38
    tDOUBLE       shift, and go to state 39
    tINTEGER      shift, and go to state 40
    tAGAIN        shift, and go to state 41
    tSTOP         shift, and go to state 42
    tRETURN       shift, and go to state 43
    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    tVAR          shift, and go to state 5
    tPUBLIC       shift, and go to state 6
    tUSE          shift, and go to state 7
    tFOREIGN      shift, and go to state 8
    tWHILE        shift, and go to state 44
    tIF           shift, and go to state 45
    tWRITE        shift, and go to state 46
    tWRITELN      shift, and go to state 47
    tNULL         shift, and go to state 48
    tNOT          shift, and go to state 49
    '+'           shift, and go to state 50
    '-'           shift, and go to state 51
    '('           shift, and go to state 52
    '['           shift, and go to state 53
    '{'           shift, and go to state 23
    '}'           shift, and go to state 90

    declaration   go to state 27
    return_type   go to state 15
    type          go to state 16
    func-type     go to state 17
    block         go to state 56
    instructions  go to state 91
    blktions      go to state 58
    blktion       go to state 59
    instruction   go to state 60
    string        go to state 61
    expr          go to state 62
    lval          go to state 63


State 56

   40 blktion: block .

    $default  reduce using rule 40 (blktion)


State 57

   30 block: '{' instructions . '}'
   34 instructions: instructions . ';' instruction
   37 blktions: instructions . ';' blktion

    ';'  shift, and go to state 92
    '}'  shift, and go to state 93


State 58

   33 instructions: blktions .
   35             | blktions . instruction
   38 blktions: blktions . blktion

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tAGAIN       shift, and go to state 41
    tSTOP        shift, and go to state 42
    tRETURN      shift, and go to state 43
    tWHILE       shift, and go to state 44
    tIF          shift, and go to state 45
    tWRITE       shift, and go to state 46
    tWRITELN     shift, and go to state 47
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71
    '{'          shift, and go to state 23

    $default  reduce using rule 33 (instructions)

    block        go to state 56
    blktion      go to state 94
    instruction  go to state 95
    string       go to state 61
    expr         go to state 62
    lval         go to state 63


State 59

   36 blktions: blktion .

    $default  reduce using rule 36 (blktions)


State 60

   32 instructions: instruction .

    $default  reduce using rule 32 (instructions)


State 61

   57 string: string . tSTRING
   59 expr: string .

    tSTRING  shift, and go to state 96

    tSTRING   [reduce using rule 59 (expr)]
    $default  reduce using rule 59 (expr)


State 62

   42 instruction: expr .
   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111

    $default  reduce using rule 42 (instruction)


State 63

   80 expr: lval .
   81     | lval . '=' expr
   82     | lval . '?'

    '='  shift, and go to state 112
    '?'  shift, and go to state 113

    $default  reduce using rule 80 (expr)


State 64

   16 program: tBEGIN block tEND .

    $default  reduce using rule 16 (program)


State 65

   22 type: '[' type ']' .

    $default  reduce using rule 22 (type)


State 66

    6 declarations: declarations declaration ';' .

    $default  reduce using rule 6 (declarations)


State 67

   25 func-type: return_type '<' '>' .

    $default  reduce using rule 25 (func-type)


State 68

   17 return_type: type .
   26 types: type .

    '<'       reduce using rule 17 (return_type)
    $default  reduce using rule 26 (types)


State 69

   24 func-type: return_type '<' types . '>'
   27 types: types . type

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    '>'           shift, and go to state 114
    '['           shift, and go to state 10

    return_type  go to state 15
    type         go to state 115
    func-type    go to state 17


State 70

    7 declaration: type tIDENTIFIER '=' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 116
    lval    go to state 63


State 71

   79 expr: '[' . expr ']'

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 89
    lval    go to state 63


State 72

    9 declaration: tVAR tIDENTIFIER '=' expr .
   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111

    $default  reduce using rule 9 (declaration)


State 73

   13 declaration: tPUBLIC tIDENTIFIER '=' expr .
   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111

    $default  reduce using rule 13 (declaration)


State 74

   15 declaration: tPUBLIC type tIDENTIFIER '=' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 117
    lval    go to state 63


State 75

   47 instruction: tRETURN expr .
   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111

    $default  reduce using rule 47 (instruction)


State 76

   41 blktion: tWHILE '(' . expr ')' tDO block

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 118
    lval    go to state 63


State 77

   51 ifcontent: '(' . expr ')' tTHEN block
   52          | '(' . expr ')' tTHEN block tELIF ifcontent
   53          | '(' . expr ')' tTHEN block tELSE block

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 119
    lval    go to state 63


State 78

   39 blktion: tIF ifcontent .

    $default  reduce using rule 39 (blktion)


State 79

   43 instruction: tWRITE exprs .
   50 exprs: exprs . ',' expr

    ','  shift, and go to state 120

    $default  reduce using rule 43 (instruction)


State 80

   49 exprs: expr .
   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111

    $default  reduce using rule 49 (exprs)


State 81

   44 instruction: tWRITELN exprs .
   50 exprs: exprs . ',' expr

    ','  shift, and go to state 120

    $default  reduce using rule 44 (instruction)


State 82

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   75     | tNOT expr .
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tEQ  shift, and go to state 99
    tNE  shift, and go to state 100
    tGE  shift, and go to state 101
    tLE  shift, and go to state 102
    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    '+'  shift, and go to state 105
    '-'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    '%'  shift, and go to state 109
    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 75 (expr)


State 83

   63 expr: '+' expr .
   64     | expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 63 (expr)


State 84

   62 expr: '-' expr .
   64     | expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 62 (expr)


State 85

   83 expr: '(' ')' . tARROW return_type ':' block

    tARROW  shift, and go to state 121


State 86

   54 arguments: declaration .

    $default  reduce using rule 54 (arguments)


State 87

   55 arguments: arguments . declaration
   84 expr: '(' arguments . ')' tARROW return_type ':' block

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    tVAR          shift, and go to state 5
    tPUBLIC       shift, and go to state 6
    tUSE          shift, and go to state 7
    tFOREIGN      shift, and go to state 8
    '['           shift, and go to state 10
    ')'           shift, and go to state 122

    declaration  go to state 123
    return_type  go to state 15
    type         go to state 16
    func-type    go to state 17


State 88

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   78     | '(' expr . ')'
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111
    ')'   shift, and go to state 124


State 89

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   79     | '[' expr . ']'
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111
    ']'   shift, and go to state 125


State 90

   29 block: '{' declarations '}' .

    $default  reduce using rule 29 (block)


State 91

   28 block: '{' declarations instructions . '}'
   34 instructions: instructions . ';' instruction
   37 blktions: instructions . ';' blktion

    ';'  shift, and go to state 92
    '}'  shift, and go to state 126


State 92

   34 instructions: instructions ';' . instruction
   37 blktions: instructions ';' . blktion

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tAGAIN       shift, and go to state 41
    tSTOP        shift, and go to state 42
    tRETURN      shift, and go to state 43
    tWHILE       shift, and go to state 44
    tIF          shift, and go to state 45
    tWRITE       shift, and go to state 46
    tWRITELN     shift, and go to state 47
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71
    '{'          shift, and go to state 23

    block        go to state 56
    blktion      go to state 127
    instruction  go to state 128
    string       go to state 61
    expr         go to state 62
    lval         go to state 63


State 93

   30 block: '{' instructions '}' .

    $default  reduce using rule 30 (block)


State 94

   38 blktions: blktions blktion .

    $default  reduce using rule 38 (blktions)


State 95

   35 instructions: blktions instruction .

    $default  reduce using rule 35 (instructions)


State 96

   57 string: string tSTRING .

    $default  reduce using rule 57 (string)


State 97

   77 expr: expr tOR . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 129
    lval    go to state 63


State 98

   76 expr: expr tAND . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 130
    lval    go to state 63


State 99

   74 expr: expr tEQ . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 131
    lval    go to state 63


State 100

   73 expr: expr tNE . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 132
    lval    go to state 63


State 101

   71 expr: expr tGE . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 133
    lval    go to state 63


State 102

   72 expr: expr tLE . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 134
    lval    go to state 63


State 103

   70 expr: expr '>' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 135
    lval    go to state 63


State 104

   69 expr: expr '<' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 136
    lval    go to state 63


State 105

   64 expr: expr '+' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 137
    lval    go to state 63


State 106

   65 expr: expr '-' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 138
    lval    go to state 63


State 107

   66 expr: expr '*' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 139
    lval    go to state 63


State 108

   67 expr: expr '/' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 140
    lval    go to state 63


State 109

   68 expr: expr '%' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 141
    lval    go to state 63


State 110

   85 expr: expr '(' . arguments ')'
   86     | expr '(' . ')'

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    tVAR          shift, and go to state 5
    tPUBLIC       shift, and go to state 6
    tUSE          shift, and go to state 7
    tFOREIGN      shift, and go to state 8
    '['           shift, and go to state 10
    ')'           shift, and go to state 142

    declaration  go to state 86
    return_type  go to state 15
    type         go to state 16
    func-type    go to state 17
    arguments    go to state 143


State 111

   88 lval: expr '[' . expr ']'

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 144
    lval    go to state 63


State 112

   81 expr: lval '=' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 145
    lval    go to state 63


State 113

   82 expr: lval '?' .

    $default  reduce using rule 82 (expr)


State 114

   24 func-type: return_type '<' types '>' .

    $default  reduce using rule 24 (func-type)


State 115

   17 return_type: type .
   27 types: types type .

    '<'       reduce using rule 17 (return_type)
    $default  reduce using rule 27 (types)


State 116

    7 declaration: type tIDENTIFIER '=' expr .
   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111

    $default  reduce using rule 7 (declaration)


State 117

   15 declaration: tPUBLIC type tIDENTIFIER '=' expr .
   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111

    $default  reduce using rule 15 (declaration)


State 118

   41 blktion: tWHILE '(' expr . ')' tDO block
   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111
    ')'   shift, and go to state 146


State 119

   51 ifcontent: '(' expr . ')' tTHEN block
   52          | '(' expr . ')' tTHEN block tELIF ifcontent
   53          | '(' expr . ')' tTHEN block tELSE block
   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111
    ')'   shift, and go to state 147


State 120

   50 exprs: exprs ',' . expr

    tIDENTIFIER  shift, and go to state 37
    tSTRING      shift, and go to state 38
    tDOUBLE      shift, and go to state 39
    tINTEGER     shift, and go to state 40
    tNULL        shift, and go to state 48
    tNOT         shift, and go to state 49
    '+'          shift, and go to state 50
    '-'          shift, and go to state 51
    '('          shift, and go to state 52
    '['          shift, and go to state 71

    string  go to state 61
    expr    go to state 148
    lval    go to state 63


State 121

   83 expr: '(' ')' tARROW . return_type ':' block

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    '['           shift, and go to state 10

    return_type  go to state 149
    type         go to state 150
    func-type    go to state 17


State 122

   84 expr: '(' arguments ')' . tARROW return_type ':' block

    tARROW  shift, and go to state 151


State 123

   55 arguments: arguments declaration .

    $default  reduce using rule 55 (arguments)


State 124

   78 expr: '(' expr ')' .

    $default  reduce using rule 78 (expr)


State 125

   79 expr: '[' expr ']' .

    $default  reduce using rule 79 (expr)


State 126

   28 block: '{' declarations instructions '}' .

    $default  reduce using rule 28 (block)


State 127

   37 blktions: instructions ';' blktion .

    $default  reduce using rule 37 (blktions)


State 128

   34 instructions: instructions ';' instruction .

    $default  reduce using rule 34 (instructions)


State 129

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   77     | expr tOR expr .
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111

    $default  reduce using rule 77 (expr)


State 130

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   76     | expr tAND expr .
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tEQ  shift, and go to state 99
    tNE  shift, and go to state 100
    tGE  shift, and go to state 101
    tLE  shift, and go to state 102
    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    '+'  shift, and go to state 105
    '-'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    '%'  shift, and go to state 109
    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 76 (expr)


State 131

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   74     | expr tEQ expr .
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tGE  shift, and go to state 101
    tLE  shift, and go to state 102
    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    '+'  shift, and go to state 105
    '-'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    '%'  shift, and go to state 109
    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 74 (expr)


State 132

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   73     | expr tNE expr .
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tGE  shift, and go to state 101
    tLE  shift, and go to state 102
    '>'  shift, and go to state 103
    '<'  shift, and go to state 104
    '+'  shift, and go to state 105
    '-'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    '%'  shift, and go to state 109
    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 73 (expr)


State 133

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   71     | expr tGE expr .
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    '+'  shift, and go to state 105
    '-'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    '%'  shift, and go to state 109
    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 71 (expr)


State 134

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   72     | expr tLE expr .
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    '+'  shift, and go to state 105
    '-'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    '%'  shift, and go to state 109
    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 72 (expr)


State 135

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   70     | expr '>' expr .
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    '+'  shift, and go to state 105
    '-'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    '%'  shift, and go to state 109
    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 70 (expr)


State 136

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   69     | expr '<' expr .
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    '+'  shift, and go to state 105
    '-'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    '%'  shift, and go to state 109
    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 69 (expr)


State 137

   64 expr: expr . '+' expr
   64     | expr '+' expr .
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    '%'  shift, and go to state 109
    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 64 (expr)


State 138

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   65     | expr '-' expr .
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    '*'  shift, and go to state 107
    '/'  shift, and go to state 108
    '%'  shift, and go to state 109
    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 65 (expr)


State 139

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   66     | expr '*' expr .
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 66 (expr)


State 140

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   67     | expr '/' expr .
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 67 (expr)


State 141

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   68     | expr '%' expr .
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    '('  shift, and go to state 110
    '['  shift, and go to state 111

    $default  reduce using rule 68 (expr)


State 142

   86 expr: expr '(' ')' .

    $default  reduce using rule 86 (expr)


State 143

   55 arguments: arguments . declaration
   85 expr: expr '(' arguments . ')'

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    tVAR          shift, and go to state 5
    tPUBLIC       shift, and go to state 6
    tUSE          shift, and go to state 7
    tFOREIGN      shift, and go to state 8
    '['           shift, and go to state 10
    ')'           shift, and go to state 152

    declaration  go to state 123
    return_type  go to state 15
    type         go to state 16
    func-type    go to state 17


State 144

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'
   88     | expr '[' expr . ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111
    ']'   shift, and go to state 153


State 145

   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   81     | lval '=' expr .
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111

    $default  reduce using rule 81 (expr)


State 146

   41 blktion: tWHILE '(' expr ')' . tDO block

    tDO  shift, and go to state 154


State 147

   51 ifcontent: '(' expr ')' . tTHEN block
   52          | '(' expr ')' . tTHEN block tELIF ifcontent
   53          | '(' expr ')' . tTHEN block tELSE block

    tTHEN  shift, and go to state 155


State 148

   50 exprs: exprs ',' expr .
   64 expr: expr . '+' expr
   65     | expr . '-' expr
   66     | expr . '*' expr
   67     | expr . '/' expr
   68     | expr . '%' expr
   69     | expr . '<' expr
   70     | expr . '>' expr
   71     | expr . tGE expr
   72     | expr . tLE expr
   73     | expr . tNE expr
   74     | expr . tEQ expr
   76     | expr . tAND expr
   77     | expr . tOR expr
   85     | expr . '(' arguments ')'
   86     | expr . '(' ')'
   88 lval: expr . '[' expr ']'

    tOR   shift, and go to state 97
    tAND  shift, and go to state 98
    tEQ   shift, and go to state 99
    tNE   shift, and go to state 100
    tGE   shift, and go to state 101
    tLE   shift, and go to state 102
    '>'   shift, and go to state 103
    '<'   shift, and go to state 104
    '+'   shift, and go to state 105
    '-'   shift, and go to state 106
    '*'   shift, and go to state 107
    '/'   shift, and go to state 108
    '%'   shift, and go to state 109
    '('   shift, and go to state 110
    '['   shift, and go to state 111

    $default  reduce using rule 50 (exprs)


State 149

   24 func-type: return_type . '<' types '>'
   25          | return_type . '<' '>'
   83 expr: '(' ')' tARROW return_type . ':' block

    '<'  shift, and go to state 30
    ':'  shift, and go to state 156


State 150

   17 return_type: type .

    $default  reduce using rule 17 (return_type)


State 151

   84 expr: '(' arguments ')' tARROW . return_type ':' block

    tDOUBLE_TYPE  shift, and go to state 1
    tSTRING_TYPE  shift, and go to state 2
    tINT_TYPE     shift, and go to state 3
    tVOID         shift, and go to state 4
    '['           shift, and go to state 10

    return_type  go to state 157
    type         go to state 150
    func-type    go to state 17


State 152

   85 expr: expr '(' arguments ')' .

    $default  reduce using rule 85 (expr)


State 153

   88 lval: expr '[' expr ']' .

    $default  reduce using rule 88 (lval)


State 154

   41 blktion: tWHILE '(' expr ')' tDO . block

    '{'  shift, and go to state 23

    block  go to state 158


State 155

   51 ifcontent: '(' expr ')' tTHEN . block
   52          | '(' expr ')' tTHEN . block tELIF ifcontent
   53          | '(' expr ')' tTHEN . block tELSE block

    '{'  shift, and go to state 23

    block  go to state 159


State 156

   83 expr: '(' ')' tARROW return_type ':' . block

    '{'  shift, and go to state 23

    block  go to state 160


State 157

   24 func-type: return_type . '<' types '>'
   25          | return_type . '<' '>'
   84 expr: '(' arguments ')' tARROW return_type . ':' block

    '<'  shift, and go to state 30
    ':'  shift, and go to state 161


State 158

   41 blktion: tWHILE '(' expr ')' tDO block .

    $default  reduce using rule 41 (blktion)


State 159

   51 ifcontent: '(' expr ')' tTHEN block .
   52          | '(' expr ')' tTHEN block . tELIF ifcontent
   53          | '(' expr ')' tTHEN block . tELSE block

    tELIF  shift, and go to state 162
    tELSE  shift, and go to state 163

    $default  reduce using rule 51 (ifcontent)


State 160

   83 expr: '(' ')' tARROW return_type ':' block .

    $default  reduce using rule 83 (expr)


State 161

   84 expr: '(' arguments ')' tARROW return_type ':' . block

    '{'  shift, and go to state 23

    block  go to state 164


State 162

   52 ifcontent: '(' expr ')' tTHEN block tELIF . ifcontent

    '('  shift, and go to state 77

    ifcontent  go to state 165


State 163

   53 ifcontent: '(' expr ')' tTHEN block tELSE . block

    '{'  shift, and go to state 23

    block  go to state 166


State 164

   84 expr: '(' arguments ')' tARROW return_type ':' block .

    $default  reduce using rule 84 (expr)


State 165

   52 ifcontent: '(' expr ')' tTHEN block tELIF ifcontent .

    $default  reduce using rule 52 (ifcontent)


State 166

   53 ifcontent: '(' expr ')' tTHEN block tELSE block .

    $default  reduce using rule 53 (ifcontent)
